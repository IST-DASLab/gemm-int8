name: Build and Release

on:
  push:
    branches: [main, ci]
  pull_request:
    branches: [main]
  workflow_dispatch: {} # Allow manual trigger

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-with-cuda:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip

      - name: Install CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.21
        id: cuda-toolkit
        with:
          cuda: "12.6.0" # Latest CUDA version, adjust as needed

      - name: Verify CUDA installation
        run: |
          echo "Installed CUDA version: ${{steps.cuda-toolkit.outputs.cuda}}"
          echo "CUDA install location: ${{steps.cuda-toolkit.outputs.CUDA_PATH}}"
          nvcc -V

      - name: Build wheel
        run: bash .github/scripts/real-build.sh
        env:
          CUDA_PATH: ${{steps.cuda-toolkit.outputs.CUDA_PATH}}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel
          path: dist/*.whl
          retention-days: 7

  publish-release:
    needs: build-with-cuda
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Only run on main branch
    permissions:
      contents: write
    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          name: wheel
          path: wheels/

      - name: List wheels
        run: ls -la wheels/

      - name: Create/Update Release
        uses: softprops/action-gh-release@v2.0.8
        with:
          files: wheels/*.whl
          prerelease: true
          name: Latest Build from main
          tag_name: continuous-release
          make_latest: true
          draft: false
          target_commitish: ${{ github.sha }} 